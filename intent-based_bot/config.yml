# This configuration file outlines the pipeline and policies used for processing and understanding user inputs,
# as well as managing the conversation flow. The pipeline employs SpaCy for language processing,
# various featurizers for text interpretation, and classifiers for intent recognition and response selection.
# The policies section includes rules for dialogue management, ensuring the bot responds appropriately to conversational
# contexts.


# https://rasa.com/docs/rasa/model-configuration/
recipe: default.v1

# The assistant project unique identifier
# This default value must be replaced with a unique assistant name within your deployment
assistant_id: default_spacy_bot
language: "de"

pipeline:
# Loads the SpaCy model for the German language. This model is used for tokenization,
# POS tagging, and named entity recognition.
- name: SpacyNLP
  model: de_core_news_sm
# Tokenizes the text into individual tokens (words) using SpaCy.
- name: SpacyTokenizer
# Converts tokens into a vector representation using SpaCy. These vectors capture semantic information about the words.
- name: SpacyFeaturizer
# Uses regular expressions to identify and extract certain patterns from the text.
# This helps in recognizing specific entities or phrases.
- name: RegexFeaturizer
# Extracts features based on the lexical and syntactic attributes of words, such as POS tags.
# This assists in understanding the grammatical structure of sentences.
- name: LexicalSyntacticFeaturizer
# Converts tokens into a bag-of-words representation, capturing the frequency of word occurrences.
# Useful for understanding the text's context.
- name: CountVectorsFeaturizer
# Another CountVectorsFeaturizer, but it operates at the character level within words (character n-grams).
# This helps in capturing form and structure details of words.
- name: CountVectorsFeaturizer
  analyzer: "char_wb"
  min_ngram: 1
  max_ngram: 4
# Model for intent classification and entity extraction.
# It is trained for 100 epochs to effectively learn from your training data.
- name: DIETClassifier
  epochs: 100
#- name: EntitySynonymMapper
# Used for selecting a response based on the training data. Also trained for 100 epochs.
- name: ResponseSelector
  epochs: 100
# When retrieving word vectors, this will decide if the casing of the word is relevant. Here it is irrelevant.
  case_sensitive: false
# Detects messages which are hard to classify by the main classifier and for which the confidence falls below
# the specified threshold (0.6 in this case).
- name: FallbackClassifier
  threshold: 0.6


policies:
# Manages conversation flow using rules.
- name: RulePolicy
  restrict_rules: False
# Remembers and predicts actions based on conversation histories. Helps in handling repetitive patterns.
- name: AugmentedMemoizationPolicy
# Trains a model (Transformer Embedding Dialogue) to predict the next action in a conversation.
# It's trained for 100 epochs and includes a fallback mechanism (core_fallback_threshold and core_fallback_action_name) to handle unexpected inputs.
- name: TEDPolicy
  epochs: 100
  core_fallback_threshold: 0.4
  core_fallback_action_name: "action_default_fallback"
  enable_fallback_prediction: True

